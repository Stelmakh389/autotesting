# Generated by Django 5.1.5 on 2025-02-14 06:11

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('vehicles', '0005_vehicleprotocol'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='vehicle',
            name='chassis_number',
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='engine_power',
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='engine_volume',
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='max_mass',
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='notes',
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='organization',
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='unladen_mass',
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='year',
        ),
        migrations.AddField(
            model_name='vehicle',
            name='actual_address',
            field=models.TextField(blank=True, help_text='Полный фактический адрес', max_length=500, verbose_name='Фактический адрес заказчика'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='additional_equipment',
            field=models.TextField(blank=True, help_text='Описание дополнительного оборудования', verbose_name='Дополнительное оборудование ТС'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='assembly_plant',
            field=models.CharField(blank=True, max_length=200, verbose_name='Сборочный завод'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='assembly_plant_address',
            field=models.TextField(blank=True, max_length=500, verbose_name='Адрес сборочного завода'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='axis_1_weight',
            field=models.PositiveIntegerField(blank=True, help_text='Масса в килограммах', null=True, verbose_name='Масса на ось 1'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='axis_2_weight',
            field=models.PositiveIntegerField(blank=True, help_text='Масса в килограммах', null=True, verbose_name='Масса на ось 2'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='axis_3_weight',
            field=models.PositiveIntegerField(blank=True, help_text='Масса в килограммах', null=True, verbose_name='Масса на ось 3'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='axis_4_weight',
            field=models.PositiveIntegerField(blank=True, help_text='Масса в килограммах', null=True, verbose_name='Масса на ось 4'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='backup_brake_system',
            field=models.TextField(blank=True, help_text='Описание запасной тормозной системы', verbose_name='Запасная тормозная система'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='body_type',
            field=models.CharField(blank=True, choices=[('sedan', 'Седан'), ('wagon', 'Универсал'), ('van', 'Фургон'), ('hatchback', 'Хэтчбек'), ('suv', 'Внедорожник'), ('coupe', 'Купе'), ('cabrio', 'Кабриолет'), ('pickup', 'Пикап'), ('minivan', 'Минивэн'), ('liftback', 'Лифтбек')], help_text='Только для категории М (легковые)', max_length=20, verbose_name='Тип кузова'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='cabin_description',
            field=models.TextField(blank=True, help_text='Дополнительная информация о кабине', verbose_name='Описание кабины'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='cabin_type',
            field=models.CharField(blank=True, choices=[('single', 'Одиночная'), ('extended', 'Удлиненная'), ('double', 'Двойная'), ('sleeper', 'Со спальным местом'), ('day', 'Дневная'), ('other', 'Другое')], help_text='Только для категории N', max_length=20, verbose_name='Тип кабины'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='cargo_space_description',
            field=models.TextField(blank=True, help_text='Дополнительная информация о загрузочном пространстве', verbose_name='Описание загрузочного пространства'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='cargo_space_type',
            field=models.CharField(blank=True, choices=[('van', 'Фургон'), ('flatbed', 'Бортовая платформа'), ('tipper', 'Самосвал'), ('tank', 'Цистерна'), ('refrigerator', 'Рефрижератор'), ('container', 'Контейнеровоз'), ('tractor', 'Седельный тягач'), ('other', 'Другое')], help_text='Только для категории N', max_length=20, verbose_name='Исполнение загрузочного пространства'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='chassis',
            field=models.CharField(blank=True, max_length=100, verbose_name='Шасси'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='clutch',
            field=models.CharField(blank=True, help_text='Марка и тип сцепления', max_length=200, verbose_name='Сцепление'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='color',
            field=models.CharField(blank=True, choices=[('white', 'Белый'), ('yellow', 'Желтый'), ('green', 'Зеленый'), ('brown', 'Коричневый'), ('red', 'Красный'), ('orange', 'Оранжевый'), ('gray', 'Серый'), ('blue', 'Синий'), ('purple', 'Фиолетовый'), ('black', 'Черный'), ('pink', 'Розовый')], max_length=20, verbose_name='Цвет ТС'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='color_shade',
            field=models.CharField(blank=True, max_length=50, verbose_name='Оттенок'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='commercial_name',
            field=models.CharField(blank=True, max_length=200, verbose_name='Коммерческое наименование'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='compression_ratio',
            field=models.DecimalField(blank=True, decimal_places=1, help_text='Например: 10.5', max_digits=4, null=True, verbose_name='Степень сжатия'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='country_code',
            field=models.CharField(blank=True, help_text='Например: RU, DE, USA', max_length=3, verbose_name='Код классификации стран мира'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='curb_weight',
            field=models.PositiveIntegerField(blank=True, help_text='Масса в килограммах', null=True, verbose_name='Снаряженная масса ТС'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='customer_info_1',
            field=models.FileField(blank=True, null=True, upload_to='vehicle_documents/%Y/%m/%d/', verbose_name='Заказчиком предоставлены сведения 1'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='customer_info_2',
            field=models.FileField(blank=True, null=True, upload_to='vehicle_documents/%Y/%m/%d/', verbose_name='Заказчиком предоставлены сведения 2'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='cylinder_arrangement',
            field=models.CharField(blank=True, choices=[('inline', 'Рядное'), ('v_type', 'V-образное'), ('boxer', 'Оппозитное'), ('w_type', 'W-образное'), ('rotary', 'Роторный')], max_length=20, verbose_name='Расположение цилиндров'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='cylinder_count',
            field=models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Количество цилиндров'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='door_count',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Только для категории М (легковые)', null=True, verbose_name='Количество дверей'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='drive_layout',
            field=models.CharField(blank=True, choices=[('awd', 'Полноприводная'), ('rwd', 'Заднеприводная'), ('fwd', 'Переднеприводная')], max_length=3, verbose_name='Компоновка'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='driving_wheels',
            field=models.CharField(blank=True, choices=[('front', 'Передние'), ('rear', 'Задние')], max_length=5, verbose_name='Ведущие колеса'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='eco_class',
            field=models.CharField(blank=True, choices=[('4', '4'), ('5', '5'), ('6', '6'), ('-', '-')], max_length=1, verbose_name='Экологический класс'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='energy_storage',
            field=models.CharField(blank=True, choices=[('battery', 'Батарея'), ('li_ion', 'Литий-ионная аккумуляторная батарея'), ('li_pol', 'Литий-полимерная аккумуляторная батарея'), ('other', 'Другое')], max_length=20, verbose_name='Устройство накопления энергии'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='energy_storage_description',
            field=models.TextField(blank=True, help_text='Дополнительная информация о накопителе энергии', verbose_name='Описание устройства накопления энергии'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='engine_displacement',
            field=models.PositiveIntegerField(blank=True, help_text='Объем в кубических сантиметрах (см³)', null=True, verbose_name='Рабочий объем цилиндров'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='engine_position',
            field=models.CharField(blank=True, choices=[('front_long', 'Переднее продольное'), ('front_cross', 'Переднее поперечное'), ('middle', 'Среднее'), ('rear_long', 'Заднее продольное'), ('rear_cross', 'Заднее поперечное')], max_length=20, verbose_name='Расположение двигателя'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='exhaust_system',
            field=models.TextField(blank=True, help_text='Описание системы выпуска и нейтрализации', verbose_name='Система выпуска и нейтрализации отработавших газов'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='export_country',
            field=models.CharField(blank=True, max_length=100, verbose_name='Страна вывоза'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='fifth_wheel_load',
            field=models.PositiveIntegerField(blank=True, help_text='Нагрузка в килограммах', null=True, verbose_name='Технически допустимая нагрузка на опорно-сцепное устройство'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='frame_number',
            field=models.CharField(blank=True, max_length=100, verbose_name='№ Рамы'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='front_suspension',
            field=models.TextField(blank=True, help_text='Описание передней подвески', verbose_name='Передняя подвеска'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='front_tires',
            field=models.CharField(blank=True, help_text='Формат: 275/45 R20', max_length=50, verbose_name='Шины передней оси'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='front_track',
            field=models.PositiveIntegerField(blank=True, help_text='Расстояние в миллиметрах', null=True, verbose_name='Колея передних колес'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='fuel_system',
            field=models.TextField(blank=True, help_text='Описание системы питания двигателя', verbose_name='Система питания'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='gearbox',
            field=models.CharField(blank=True, help_text='Марка и тип коробки передач', max_length=200, verbose_name='Коробка передач'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='height',
            field=models.PositiveIntegerField(blank=True, help_text='Высота в миллиметрах', null=True, verbose_name='Габаритная высота ТС'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='hybrid_description',
            field=models.TextField(blank=True, help_text='Подробное описание гибридной установки', verbose_name='Описание гибридного ТС'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='hybrid_energy_storage',
            field=models.CharField(blank=True, choices=[('battery', 'Батарея'), ('li_ion', 'Литий-ионная аккумуляторная батарея'), ('li_pol', 'Литий-полимерная аккумуляторная батарея'), ('other', 'Другое')], max_length=20, verbose_name='Устройство накопления энергии (гибрид)'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='hybrid_energy_storage_description',
            field=models.TextField(blank=True, help_text='Дополнительная информация о накопителе энергии', verbose_name='Описание устройства накопления энергии (гибрид)'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='ice_brand',
            field=models.CharField(blank=True, max_length=100, verbose_name='Марка двигателя внутреннего сгорания'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='ice_type',
            field=models.CharField(blank=True, max_length=100, verbose_name='Тип двигателя внутреннего сгорания'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='ignition_system',
            field=models.TextField(blank=True, help_text='Описание системы зажигания', verbose_name='Система зажигания'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='legal_address',
            field=models.TextField(blank=True, help_text='Полный юридический адрес', max_length=500, verbose_name='Юридический адрес заказчика'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='length',
            field=models.PositiveIntegerField(blank=True, help_text='Длина в миллиметрах', null=True, verbose_name='Габаритная длина ТС'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='manufacture_date',
            field=models.DateField(blank=True, help_text='Месяц и год выпуска ТС', null=True, verbose_name='Дата выпуска'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='manufacturer_actual_address',
            field=models.TextField(blank=True, max_length=500, verbose_name='Фактический адрес изготовителя'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='manufacturer_legal_address',
            field=models.TextField(blank=True, max_length=500, verbose_name='Юридический адрес изготовителя'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='manufacturer_name',
            field=models.CharField(blank=True, max_length=200, verbose_name='Наименование изготовителя'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='manufacturing_country',
            field=models.CharField(blank=True, max_length=100, verbose_name='Страна изготовления'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='max_power',
            field=models.DecimalField(blank=True, decimal_places=1, help_text='Мощность в кВт', max_digits=6, null=True, verbose_name='Максимальная мощность'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='max_power_rpm',
            field=models.PositiveIntegerField(blank=True, help_text='Обороты в минуту (мин⁻¹)', null=True, verbose_name='Обороты максимальной мощности'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='max_road_train_mass',
            field=models.PositiveIntegerField(blank=True, help_text='Масса в килограммах (только для категории N)', null=True, verbose_name='Технически допустимая максимальная масса автопоезда'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='max_weight',
            field=models.PositiveIntegerField(blank=True, help_text='Масса в килограммах', null=True, verbose_name='Технически допустимая максимальная масса ТС'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='mileage',
            field=models.PositiveIntegerField(blank=True, help_text='Пробег в километрах', null=True, verbose_name='Пробег'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='parking_brake_system',
            field=models.TextField(blank=True, help_text='Описание стояночной тормозной системы', verbose_name='Стояночная тормозная система'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='rear_suspension',
            field=models.TextField(blank=True, help_text='Описание задней подвески', verbose_name='Задняя подвеска'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='rear_tires',
            field=models.CharField(blank=True, help_text='Формат: 275/45 R20', max_length=50, verbose_name='Шины задней оси'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='rear_track',
            field=models.PositiveIntegerField(blank=True, help_text='Расстояние в миллиметрах', null=True, verbose_name='Колея задних колес'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='receipt_date',
            field=models.DateField(blank=True, help_text='Дата когда объект был получен', null=True, verbose_name='Дата получения объекта'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='service_brake_system',
            field=models.TextField(blank=True, help_text='Описание рабочей тормозной системы', verbose_name='Рабочая тормозная система'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='special_purpose',
            field=models.CharField(blank=True, help_text='Только для спецтехники', max_length=200, verbose_name='Назначение'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='steering',
            field=models.CharField(blank=True, help_text='Марка и тип рулевого управления', max_length=200, verbose_name='Рулевое управление'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='total_seats',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Только для категории М (легковые)', null=True, verbose_name='Общее количество мест'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='trailer_mass_with_brakes',
            field=models.PositiveIntegerField(blank=True, help_text='Масса в килограммах', null=True, verbose_name='Максимальная масса прицепа с тормозной системой'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='trailer_mass_without_brakes',
            field=models.PositiveIntegerField(blank=True, help_text='Масса в килограммах', null=True, verbose_name='Максимальная масса прицепа без тормозной системы'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='transmission',
            field=models.TextField(blank=True, help_text='Описание трансмиссии', verbose_name='Трансмиссия'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='uveos_call_date',
            field=models.DateField(blank=True, null=True, verbose_name='Дата прозвона УВЭОС'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='uveos_number',
            field=models.CharField(blank=True, max_length=50, verbose_name='№ УВЭОС'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_category',
            field=models.CharField(blank=True, max_length=50, verbose_name='Категория ТС'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_type',
            field=models.CharField(blank=True, max_length=50, verbose_name='Тип'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='wheel_formula',
            field=models.CharField(blank=True, choices=[('4x2', '4x2'), ('4x4', '4x4'), ('6x4', '6x4'), ('6x6', '6x6'), ('8x4', '8x4'), ('8x8', '8x8')], max_length=3, verbose_name='Колесная формула'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='wheelbase',
            field=models.PositiveIntegerField(blank=True, help_text='Расстояние в миллиметрах', null=True, verbose_name='Колесная база'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='width',
            field=models.PositiveIntegerField(blank=True, help_text='Ширина в миллиметрах', null=True, verbose_name='Габаритная ширина ТС'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='body_number',
            field=models.CharField(blank=True, max_length=100, verbose_name='№ Кузова'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='brand',
            field=models.CharField(blank=True, max_length=100, verbose_name='Марка ТС'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='engine_number',
            field=models.CharField(blank=True, max_length=100, verbose_name='№ двигателя'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='fuel_type',
            field=models.CharField(blank=True, choices=[('gasoline', 'Бензин'), ('diesel', 'Дизель'), ('hybrid', 'Гибрид'), ('electric', 'Электро')], max_length=20, verbose_name='Тип топлива'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='model',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='registration_number',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='vin',
            field=models.CharField(blank=True, max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message='VIN должен состоять из 17 символов (без букв I, O, Q)', regex='^[A-HJ-NPR-Z0-9]{17}$')], verbose_name='Идентификационный номер (VIN)'),
        ),
        migrations.CreateModel(
            name='ElectricMachine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(blank=True, max_length=100, verbose_name='Марка электромашины')),
                ('machine_type', models.CharField(blank=True, max_length=100, verbose_name='Тип электромашины')),
                ('voltage', models.PositiveIntegerField(blank=True, help_text='Напряжение в вольтах (V)', null=True, verbose_name='Рабочее напряжение')),
                ('max_power_30min', models.DecimalField(blank=True, decimal_places=1, help_text='Мощность в киловаттах (кВт)', max_digits=6, null=True, verbose_name='Максимальная 30-минутная мощность')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electric_machines', to='vehicles.vehicle', verbose_name='Транспортное средство')),
            ],
            options={
                'verbose_name': 'Электромашина',
                'verbose_name_plural': 'Электромашины',
            },
        ),
        migrations.CreateModel(
            name='ElectricMotor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(blank=True, max_length=100, verbose_name='Марка электродвигателя')),
                ('motor_type', models.CharField(blank=True, max_length=100, verbose_name='Тип электродвигателя')),
                ('voltage', models.PositiveIntegerField(blank=True, help_text='Напряжение в вольтах (V)', null=True, verbose_name='Рабочее напряжение')),
                ('max_power_30min', models.DecimalField(blank=True, decimal_places=1, help_text='Мощность в киловаттах (кВт)', max_digits=6, null=True, verbose_name='Максимальная 30-минутная мощность')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electric_motors', to='vehicles.vehicle', verbose_name='Транспортное средство')),
            ],
            options={
                'verbose_name': 'Электродвигатель',
                'verbose_name_plural': 'Электродвигатели',
            },
        ),
        migrations.CreateModel(
            name='SeatRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_number', models.PositiveSmallIntegerField(help_text='Порядковый номер ряда сидений', verbose_name='Номер ряда')),
                ('seat_count', models.PositiveSmallIntegerField(help_text='Количество мест в данном ряду', verbose_name='Количество мест')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seat_rows', to='vehicles.vehicle', verbose_name='Транспортное средство')),
            ],
            options={
                'verbose_name': 'Ряд сидений',
                'verbose_name_plural': 'Ряды сидений',
                'ordering': ['row_number'],
            },
        ),
    ]
